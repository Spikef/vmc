// 使用1px类时，需要注意 如果是absolute定位的，在引入mx-1px后，需要重新写入absolute定位

// @mixin
@mixin vmc-1px($color: #ccc)
{
    position    : relative;
    border-color: $color;

    &:before {
        position        : absolute;
        content         : "";
        width           : 100%;
        height          : 100%;
        top             : 0;
        left            : 0;
        transform-origin: 0 0;
        box-sizing      : border-box;
        pointer-events  : none;
        border          : 1px solid;
        border-color    : inherit;
        border-radius   : inherit;
    }
    @media screen and (-webkit-min-device-pixel-ratio:1.5) {
        &:before {
            width    : 150%;
            height   : 150%;
            transform: scale(0.6667);
        }
    }
    @media screen and (-webkit-min-device-pixel-ratio: 2) {
        &:before {
            width    : 200%;
            height   : 200%;
            transform: scale(0.5);
        }
    }
}

@mixin vmc-1px-side-base($color, $pseudo)
{
    position    : relative;
    border-color: $color;

    &:#{$pseudo} {
        position        : absolute;
        content         : "";
        transform-origin: 0 0;
    }
}

@mixin vmc-1px-device-fix($pseudo, $transform)
{
    @if ($transform == X) {
        @media screen and (-webkit-min-device-pixel-ratio: 1.5) {
            &:#{$pseudo} {
                transform: scaleX(0.6667);
            }
        }
        @media screen and (-webkit-min-device-pixel-ratio: 2) {
            &:#{$pseudo} {
                transform: scaleX(0.5);
            }
        }
        @media screen and (-webkit-min-device-pixel-ratio: 3) {
            &:#{$pseudo} {
                transform: scaleX(0.333);
            }
        }
    } @else if ($transform == Y) {
        @media screen and (-webkit-min-device-pixel-ratio: 1.5) {
            &:#{$pseudo} {
                transform: scaleY(0.6667);
            }
        }
        @media screen and (-webkit-min-device-pixel-ratio: 2) {
            &:#{$pseudo} {
                transform: scaleY(0.5);
            }
        }
        @media screen and (-webkit-min-device-pixel-ratio: 3) {
            &:#{$pseudo} {
                transform: scaleY(0.333);
            }
        }
    }
};

@mixin vmc-1px-side($color: #ccc, $direction: top, $pseudo: before)
{
    @include vmc-1px-side-base($color, $pseudo);

    @if ($direction == top) {
        &:#{$pseudo} {
            width       : 100%;
            height      : 1px;
            top         : 0;
            left        : 0;
            border-top  : 1px solid;
            border-color: inherit;
        }

        @include vmc-1px-device-fix($pseudo, Y);
    } @else if ($direction == bottom) {
        &:#{$pseudo} {
            width        : 100%;
            height       : 1px;
            bottom       : -1px;
            left         : 0;
            border-bottom: 1px solid;
            border-color : inherit;
        }

        @include vmc-1px-device-fix($pseudo, Y);
    } @else if ($direction == left) {
        &:#{$pseudo} {
            width       : 1px;
            height      : 100%;
            top         : 0;
            left        : 0;
            border-left : 1px solid;
            border-color: inherit;
        }

        @include vmc-1px-device-fix($pseudo, X);
    } @else {
        &:#{$pseudo} {
            width       : 1px;
            height      : 100%;
            top         : 0;
            right       : -1px;
            border-right: 1px solid;
            border-color: inherit;
        }

        @include vmc-1px-device-fix($pseudo, X);
    }
}

.vmc-1px{
    @include vmc-1px($BorderColor);

    &-top{
        @include vmc-1px-side($BorderColor, top, before);
    }
    &-bottom{
        @include vmc-1px-side($BorderColor, bottom, after);
    }
    &-left{
        @include vmc-1px-side($BorderColor, left, before);
    }
    &-right{
        @include vmc-1px-side($BorderColor, right, after);
    }
    &-left-right{
        @include vmc-1px-side($BorderColor, left, before);
        @include vmc-1px-side($BorderColor, right, after);
    }
    &-top-bottom{
        @include vmc-1px-side($BorderColor, top, before);
        @include vmc-1px-side($BorderColor, bottom, after);
    }
    &-left-top{
        @include vmc-1px-side($BorderColor, left, before);
        @include vmc-1px-side($BorderColor, top, after);
    }
    &-left-bottom{
        @include vmc-1px-side($BorderColor, left, before);
        @include vmc-1px-side($BorderColor, bottom, after);
    }
    &-right-top{
        @include vmc-1px-side($BorderColor, right, before);
        @include vmc-1px-side($BorderColor, top, after);
    }
    &-right-bottom{
        @include vmc-1px-side($BorderColor, right, before);
        @include vmc-1px-side($BorderColor, bottom, after);
    }
}